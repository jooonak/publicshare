<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.slam.mapper.ResBookMapper">
	<update id="rejectUpdateResData" parameterType="ReservationDTO">
		update
		tbl_reservation
		set
		status = case status
		when 'onapply' then 'loanrejected'
		when 'onres' then 'onapplyready'
		end
		where bno = #{bno} and rno >= #{rno} and status != 'cancel'
		order by
		rno
		limit 2;
	</update>

	<!-- 이전 예약자가 예약 취소를 한 경우 다음 예약자에게 예약 여부를 물어보았을 때 다음 예약자가 취소를 한 경우 호출되는 쿼리(sb) -->
	<update id="rejectUpdateApplyData" parameterType="ReservationDTO">
		update
		tbl_reservation
		set
		status = case status
		when 'onapplyready' then 'cancel'
		when 'onres' then 'onapplyready'
		end
		where bno = #{bno} and rno >= #{rno} and status != 'cancel'
		order by
		rno
		limit 2;
	</update>
	
	<resultMap type="map" id="detailedOnApplyMap">
		<collection property="BookDTO" ofType="BookDTO">
			<id property="bno" column="bno" />
			<id property="bname" column="bname" />
			<id property="publisher" column="publisher" />
			<id property="owner" column="owner" />
		</collection>
		<collection property="ReservationDTO" ofType="ReservationDTO">
			<id property="rno" column="rno" />
			<id property="lender" column="lender" />
			<id property="status" column="status" />
		</collection>
	</resultMap>
	
	<select id="getOnApplyReadyList" resultMap="detailedOnApplyMap">
		select
		tbl_reservation.rno rno, tbl_reservation.bno bno,
		tbl_reservation.lender, tbl_reservation.status,
		tbl_book.bname bname,
		tbl_book.publisher publisher, tbl_book.owner
		from
		(
		select
		*
		from
		tbl_reservation
		where
		lender = #{lender}
		and
		status = 'onapplyready'
		)
		tbl_reservation, tbl_book

		where tbl_reservation.bno = tbl_book.bno;
	</select>
	
</mapper>