<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.slam.mapper.ReturnMapper">
	<!-- 내가 대여한 책의 정보를 가져오는 쿼리 -JH -->
	<select id="getList" resultMap="getMyLoanList">
		select 
		book.bno bno, img, bname, owner, publisher, rno, startdate
		from 
		tbl_book book, tbl_reservation res 
		where res.bno = book.bno 
		and lender = #{mid} 

		<!-- <choose> 
			<when test="status == 'onloan'">
			and status like #{status} order by startdate asc
			</when>
			<otherwise > -->
			and status = #{status} 
			<!-- </otherwise>
		</choose>
		limit #{skip},8  -->


	</select>
	
	<resultMap type="map" id="getMyLoanList">
		<collection property="BookDTO" ofType="BookDTO">
			<id property="bno" column="bno" />
			<id property="bname" column="bname" />
			<id property="publisher" column="publisher" />
			<id property="owner" column="owner" />
			<id property="img" column="img" />
		</collection>
		<collection property="ReservationDTO" ofType="ReservationDTO">
			<id property="rno" column="rno" />
			<id property="startDate" column="startdate" />
		</collection>
	</resultMap>
	<!-- /내가 대여한 책의 정보를 가져오는 쿼리 -->
	
	<!-- 내가 반납신청 했으나 거절된 책의 정보를 가져오는 쿼리 -JH -->
	<select id="checkReturn" resultMap="checkMyReturn">
		select
        rno, book.bno, bname, publisher, owner, img, startdate, status, res.latefee latefee
        from
        tbl_book book, tbl_reservation res
        where book.bno = res.bno
        and lender = #{mid}
        and status = 'returnrejected'
	</select>
	
	<!-- 나의 대여 이력 가져오는 쿼리-hb-->
	<select id="loanHistoryList" resultMap="checkMyReturn">
		select
        rno, book.bno, bname, publisher, owner, img, returndate, status, res.latefee latefee
        from
        tbl_book book, tbl_reservation res
        where book.bno = res.bno
        and lender = #{mid}
        and status = 'returned'
	</select>
	
	<resultMap type="map" id="checkMyReturn">
		<collection property="BookDTO" ofType="BookDTO">
			<id property="bno" column="bno" />
			<id property="bname" column="bname" />
			<id property="publisher" column="publisher" />
			<id property="owner" column="owner" />
			<id property="img" column="img" />
		</collection>
		<collection property="ReservationDTO" ofType="ReservationDTO">
			<id property="rno" column="rno" />
			<id property="startDate" column="startdate" />
			<id property="lateFee" column="latefee" />
			<id property="status" column="status" />
			<id property="returnDate" column="returndate" />
		</collection>
	</resultMap>
	<!-- /내가 반납신청 했으나 거절된 책의 정보를 가져오는 쿼리 -->
	
	<!-- 내 소유의 책에 대해 반납 신청이 있는지 확인하고, 그 책의 정보를 가져오는 쿼리 -JH -->
	<select id="checkItem" resultMap="checkMyItem">
		select 
			rno, book.bno, bname, publisher, img, lender, status, startdate 
		from 
			tbl_book book,tbl_reservation res 
		where 
			book.bno = res.bno 
			and owner = #{mid}
		    and status = 'onreturn'
		order by startdate asc, rno desc
	</select>
	
	<resultMap type="map" id="checkMyItem">
		<collection property="BookDTO" ofType="BookDTO">
			<id property="bno" column="bno" />
			<id property="bname" column="bname" />
			<id property="publisher" column="publisher" />
			<id property="img" column="img" />
		</collection>
		<collection property="ReservationDTO" ofType="ReservationDTO">
			<id property="rno" column="rno" />
			<id property="status" column="status" />
			<id property="startDate" column="startdate" />
			<id property="lender" column="lender" />
		</collection>
	</resultMap>
	<!-- /내 소유의 책에 대해 반납 신청이 있는지 확인하고, 그 책의 정보를 가져오는 쿼리 -JH -->
	
	<!-- 내 소유의 책에 반납 신청이 있고, 내가 수락 했을 때 데이터를 업데이트하는 쿼리 -JH -->
	<update id="returnConfirm">
		UPDATE tbl_reservation
		    SET status = (
				case status 
				when 'onreturn' then 'returned'
		        when 'onres' then 'onapplyready'
		        end),
		    returndate = (case status when 'returned' then now()
		        end)
		WHERE bno = #{bno} and rno >= #{rno} and status != 'cancel'
		order by rno
		limit 2
	</update>
	<!-- /내 소유의 책에 반납 신청이 있고, 내가 수락 했을 때 데이터를 업데이트하는 쿼리 -JH -->
	
</mapper>
